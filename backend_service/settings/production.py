"""
Django's settings for backend_service project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import sentry_sdk
from sentry_sdk.integrations.celery import CeleryIntegration
from sentry_sdk.integrations.django import DjangoIntegration
from sentry_sdk.integrations.redis import RedisIntegration

# pylint: disable=unused-wildcard-import,wildcard-import
from backend_service.settings.base import *  # noqa: F403 # NOSONAR

# Django-SES configuration (https://github.com/django-ses/django-ses)
EMAIL_BACKEND = "django_ses.SESBackend"

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")
# Sentry is an open-source error tracking system that helps to monitor and fix crashes in real-time.
# Learn more about Sentry here: https://sentry.io/welcome/
sentry_sdk.init(
    dsn=ENV.str("SENTRY_DSN", default=None),  # Data Source Name for connecting Sentry
    integrations=[  # Integrations specify which parts of the system should be monitored
        DjangoIntegration(),
        CeleryIntegration(),
        RedisIntegration(),
    ],
    server_name=ENV.str(
        "SERVER_NAME", default=ENV("SERVER_NAME", default="server-not-set")
    ),
    release=ENV.str(
        "SOURCE_VERSION",
        default=ENV.str("RELEASE_VERSION", default="default-release"),
    ),
    # Name of the environment (used in Sentry dashboard to differentiate between environments)
    environment=ENVIRONMENT,
)

# This disables the "browsable" api that can cause various production issues
REST_FRAMEWORK["DEFAULT_RENDERER_CLASSES"] = ("rest_framework.renderers.JSONRenderer",)
