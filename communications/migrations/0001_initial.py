# Generated by Django 5.0.6 on 2024-06-11 02:27

import django.contrib.postgres.fields
import django.db.models.deletion
import utils.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunicationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('client_notification_template_name', models.CharField(blank=True, max_length=225)),
                ('content', models.TextField(blank=True)),
                ('sender_address', models.CharField(max_length=250)),
                ('recipient_address', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), size=None)),
                ('communication_type', models.CharField(choices=[('SMS', 'Text message'), ('EMAIL', 'Email'), ('WEBHOOK', 'Webhook'), ('TEAMS', 'Teams')], max_length=32)),
                ('is_log_only', models.BooleanField(default=False, help_text='Indicates whether this is only a log record and message was actually sent')),
                ('error_response', models.TextField(blank=True, help_text='Set when upstream provider returns an error')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communication_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(utils.models.AutoUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Gateway',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('external_unique_id', models.CharField(blank=True, db_index=True, help_text='External unique ID for the gateway.', max_length=255)),
                ('name', models.CharField(db_index=True, help_text='Name of the gateway.', max_length=255)),
                ('type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('whatsapp', 'WhatsApp')], max_length=32)),
                ('auth_type', models.CharField(choices=[('none', 'None'), ('api_key', 'API Key'), ('bearer_token', 'Bearer Token'), ('basic_auth', 'Basic Auth'), ('oauth2', 'OAuth 2.0')], max_length=32)),
                ('auth_context', models.JSONField(blank=True, default=dict, help_text='Authentication details like API key, username:password for Basic Auth, token, etc.')),
                ('api_url', models.URLField(help_text='API URL for the gateway API.', max_length=1024)),
                ('request_method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH')], default='POST', help_text='HTTP method for requests.', max_length=10)),
                ('headers', models.JSONField(blank=True, default=dict, help_text='Default headers for requests.')),
                ('body_template', models.JSONField(blank=True, default=dict, help_text='Template for the request body.')),
                ('params_template', models.JSONField(blank=True, default=dict, help_text='Template for URL parameters.')),
                ('success_response_codes', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), blank=True, default=list, help_text='List of success response codes.', size=None)),
                ('response_path_to_message', models.JSONField(blank=True, default=dict, help_text="Dot notation path in the response JSON to find the actual message or result (e.g., 'data.result').", max_length=255)),
                ('context', models.JSONField(blank=True, default=dict, help_text='Context for the gateway like variables, etc.')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Gateway',
                'verbose_name_plural': 'Gateways',
                'ordering': ['name'],
            },
            bases=(utils.models.AutoUpdateMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='deleted at')),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='name of the invitee', max_length=100, verbose_name='name')),
                ('language', models.CharField(blank=True, choices=[('ar', 'Arabic'), ('de', 'German'), ('en', 'English'), ('es', 'Spanish'), ('fr', 'French'), ('hi', 'Hindi'), ('kn', 'Kannada'), ('ta', 'Tamil'), ('te', 'Telugu')], help_text='language for the invitee', max_length=8, verbose_name='language')),
                ('content', models.TextField(help_text='content of the invite', verbose_name='content')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Template',
                'verbose_name_plural': 'Templates',
            },
            bases=(utils.models.AutoUpdateMixin, models.Model),
        ),
    ]
